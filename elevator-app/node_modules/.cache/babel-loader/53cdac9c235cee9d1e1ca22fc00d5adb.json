{"ast":null,"code":"import fetch from './fetch';\n\nconst sort = criteria => ({\n  floors\n}) => floors.sort(criteria);\n\nexport const getFloors = (id, onSucess = console.log, onError = console.err) => fetch('GET', `elevator/${id}`).then(sort((a, b) => b - a)).then(onSucess).catch(onError);\nexport const getToken = (id, otp, onSucess = console.log, onError = console.err) => fetch('POST', `elevator/${id}/access`, {\n  otp\n}).then(onSucess).catch(onError);\nexport const move = (token, floor, onSucess = console.log, onError = console.err) => backend('POST', 'elevator/move', {\n  floor\n}, {\n  Authorization: `Bearer ${token}`\n}).then(onSucess).catch(onError);","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/backend/service.js"],"names":["fetch","sort","criteria","floors","getFloors","id","onSucess","console","log","onError","err","then","a","b","catch","getToken","otp","move","token","floor","backend","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAGC,QAAQ,IAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAcA,MAAM,CAACF,IAAP,CAAYC,QAAZ,CAAvC;;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAQ,GAACC,OAAO,CAACC,GAAtB,EAA2BC,OAAO,GAACF,OAAO,CAACG,GAA3C,KAAmDV,KAAK,CAAC,KAAD,EAAS,YAAWK,EAAG,EAAvB,CAAL,CACvEM,IADuE,CAClEV,IAAI,CAAC,CAACW,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAZ,CAD8D,EAEvED,IAFuE,CAElEL,QAFkE,EAGvEQ,KAHuE,CAGjEL,OAHiE,CAArE;AAKP,OAAO,MAAMM,QAAQ,GAAG,CAACV,EAAD,EAAKW,GAAL,EAAUV,QAAQ,GAACC,OAAO,CAACC,GAA3B,EAAgCC,OAAO,GAACF,OAAO,CAACG,GAAhD,KAAwDV,KAAK,CAAC,MAAD,EAAU,YAAWK,EAAG,SAAxB,EAAkC;AAACW,EAAAA;AAAD,CAAlC,CAAL,CAC3EL,IAD2E,CACtEL,QADsE,EAE3EQ,KAF2E,CAErEL,OAFqE,CAAzE;AAIP,OAAO,MAAMQ,IAAI,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeb,QAAQ,GAACC,OAAO,CAACC,GAAhC,EAAqCC,OAAO,GAACF,OAAO,CAACG,GAArD,KAA6DU,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B;AAACD,EAAAA;AAAD,CAA1B,EAAmC;AACnHE,EAAAA,aAAa,EAAG,UAASH,KAAM;AADoF,CAAnC,CAAP,CAE1EP,IAF0E,CAErEL,QAFqE,EAG5EQ,KAH4E,CAGtEL,OAHsE,CAA1E","sourcesContent":["import fetch from './fetch';\r\n\r\nconst sort = criteria => ({floors}) => floors.sort(criteria);\r\n\r\nexport const getFloors = (id, onSucess=console.log, onError=console.err) => fetch('GET', `elevator/${id}`)\r\n    .then(sort((a,b) => b-a))\r\n    .then(onSucess)\r\n    .catch(onError);\r\n\r\nexport const getToken = (id, otp, onSucess=console.log, onError=console.err) => fetch('POST', `elevator/${id}/access`, {otp})\r\n    .then(onSucess)\r\n    .catch(onError);\r\n\r\nexport const move = (token, floor, onSucess=console.log, onError=console.err) => backend('POST', 'elevator/move', {floor}, {\r\n        Authorization: `Bearer ${token}`\r\n    }).then(onSucess)\r\n    .catch(onError);\r\n\r\n"]},"metadata":{},"sourceType":"module"}