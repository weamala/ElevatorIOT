{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruzaf\\\\Desktop\\\\ws\\\\elevator-app\\\\src\\\\modules\\\\app\\\\components\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport Floors from './Floors';\nimport backend from '../../../backend/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Password = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [pass, setPass] = useState();\n  const [floors, setFloors] = useState();\n  return floors ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Floors, {\n      floors: floors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"primary\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"password\",\n        pattern: \"\\\\d{4}\",\n        onChange: e => setPass(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: _e => {\n            backend('POST', `elevator/${id}`, {\n              otp: pass\n            }).then(r => r.json()).then(resp => setFloors(resp.sort((a, b) => b - a))).catch(console.err);\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 60\n  }, this);\n};\n\n_s(Password, \"/lVaHKeT8IzbelJjTbentuiJrb8=\", false, function () {\n  return [useParams];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/modules/app/components/Password.js"],"names":["Alert","Button","FormControl","InputGroup","React","useState","useParams","Floors","backend","Password","id","pass","setPass","floors","setFloors","e","target","value","_e","otp","then","r","json","resp","sort","a","b","catch","console","err"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,iBAAvD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AAEA,SAAOQ,MAAM,gBAAG;AAAA,2BAAK,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA0C;AAAA,4BAEnD,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFmD,eAGnD,QAAC,UAAD;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,OAAO,EAAC,QAFZ;AAGI,QAAA,QAAQ,EAAEE,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,UAAD,CAAY,MAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAEC,EAAE,IAAI;AAC7CV,YAAAA,OAAO,CAAC,MAAD,EAAU,YAAWE,EAAG,EAAxB,EAA2B;AAACS,cAAAA,GAAG,EAAER;AAAN,aAA3B,CAAP,CACKS,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUG,IAAI,IAAIT,SAAS,CAACS,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAArB,CAAD,CAF3B,EAGKE,KAHL,CAGWC,OAAO,CAACC,GAHnB;AAIH,WALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHmD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvD;AAoBH,CAzBD;;GAAMpB,Q;UACWH,S;;;KADXG,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Floors from './Floors';\r\nimport backend from '../../../backend/fetch';\r\n\r\nconst Password = () => {\r\n    const {id} = useParams();\r\n    const [pass, setPass] = useState();\r\n    const [floors, setFloors] = useState();\r\n\r\n    return floors ? <div><Floors floors={floors}/></div> : <form>\r\n\r\n        <Alert variant=\"primary\">Password:</Alert>\r\n        <InputGroup>\r\n            <FormControl\r\n                placeholder=\"password\"\r\n                pattern=\"\\d{4}\"\r\n                onChange={e => setPass(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n                <Button variant=\"outline-primary\" onClick={_e => {\r\n                    backend('POST', `elevator/${id}`, {otp: pass})\r\n                        .then(r => r.json())\r\n                        .then(resp => setFloors(resp.sort((a,b) => b-a)))\r\n                        .catch(console.err);\r\n                }}>submit</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n    </form>\r\n};\r\n\r\nexport default Password;"]},"metadata":{},"sourceType":"module"}