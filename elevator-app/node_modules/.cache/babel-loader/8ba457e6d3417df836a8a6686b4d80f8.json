{"ast":null,"code":"import { appFetch } from './appFetch';\nimport fetch from './fetch';\n\nconst sort = criteria => ({\n  floors\n}) => floors.sort(criteria);\n\nexport const getFloors = (id, onSucess = console.log, onError = console.err) => {\n  appFetch(`elevator/${id}`, config('GET'), s => {\n    onSucess(s.floors.sort((a, b) => b - a));\n  }, onError);\n};\nexport const getToken = (id, otp, onSucess = console.log, onError = console.err) => {\n  appFetch(`elevator/${id}/access`, config('POST', {\n    otp\n  }), onSucess, onError);\n};\nexport const move = (token, floor, onSucess = console.log, onError = console.err) => {\n  fetch('POST', 'elevator/move', {\n    floor\n  }, {\n    Authorization: `Bearer ${token}`\n  }).then(onSucess).catch(onError);\n};","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/backend/service.js"],"names":["appFetch","fetch","sort","criteria","floors","getFloors","id","onSucess","console","log","onError","err","config","s","a","b","getToken","otp","move","token","floor","Authorization","then","catch"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAGC,QAAQ,IAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAcA,MAAM,CAACF,IAAP,CAAYC,QAAZ,CAAvC;;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAQ,GAACC,OAAO,CAACC,GAAtB,EAA2BC,OAAO,GAACF,OAAO,CAACG,GAA3C,KAAmD;AACxEX,EAAAA,QAAQ,CAAE,YAAWM,EAAG,EAAhB,EAAmBM,MAAM,CAAC,KAAD,CAAzB,EAAkCC,CAAC,IAAI;AAC3CN,IAAAA,QAAQ,CAACM,CAAC,CAACT,MAAF,CAASF,IAAT,CAAc,CAACY,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAzB,CAAD,CAAR;AACH,GAFO,EAELJ,OAFK,CAAR;AAGH,CAJM;AAKP,OAAO,MAAMM,QAAQ,GAAG,CAACV,EAAD,EAAKW,GAAL,EAAUV,QAAQ,GAACC,OAAO,CAACC,GAA3B,EAAgCC,OAAO,GAACF,OAAO,CAACG,GAAhD,KAAwD;AAC5EX,EAAAA,QAAQ,CAAE,YAAWM,EAAG,SAAhB,EAA0BM,MAAM,CAAC,MAAD,EAAS;AAACK,IAAAA;AAAD,GAAT,CAAhC,EAAiDV,QAAjD,EAA2DG,OAA3D,CAAR;AACH,CAFM;AAGP,OAAO,MAAMQ,IAAI,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeb,QAAQ,GAACC,OAAO,CAACC,GAAhC,EAAqCC,OAAO,GAACF,OAAO,CAACG,GAArD,KAA6D;AAE7EV,EAAAA,KAAK,CAAC,MAAD,EAAS,eAAT,EAA0B;AAACmB,IAAAA;AAAD,GAA1B,EAAmC;AACpCC,IAAAA,aAAa,EAAG,UAASF,KAAM;AADK,GAAnC,CAAL,CAEGG,IAFH,CAEQf,QAFR,EAGCgB,KAHD,CAGOb,OAHP;AAIH,CANM","sourcesContent":["import { appFetch } from './appFetch';\r\nimport fetch from './fetch';\r\n\r\nconst sort = criteria => ({floors}) => floors.sort(criteria);\r\n\r\nexport const getFloors = (id, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`elevator/${id}`, config('GET'), s => {\r\n        onSucess(s.floors.sort((a,b) => b-a));\r\n    }, onError);\r\n}\r\nexport const getToken = (id, otp, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`elevator/${id}/access`, config('POST', {otp}), onSucess, onError);\r\n}\r\nexport const move = (token, floor, onSucess=console.log, onError=console.err) => {\r\n    \r\n    fetch('POST', 'elevator/move', {floor}, {\r\n        Authorization: `Bearer ${token}`\r\n    }).then(onSucess)\r\n    .catch(onError);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}