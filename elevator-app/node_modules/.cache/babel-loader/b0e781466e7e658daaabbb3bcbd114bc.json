{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruzaf\\\\Desktop\\\\ws\\\\elevator-app\\\\src\\\\modules\\\\app\\\\components\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Coming from './Coming';\nimport backend from '../../../backend';\nimport ErrorAlert from '../../utils/components/ErrorAlert';\nimport { FormattedMessage } from 'react-intl';\nimport Alert from '../../utils/components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst floors = [0, 1, 2];\n\nconst Password = () => {\n  _s();\n\n  const {\n    floor\n  } = useParams();\n  const [token, setToken] = useState();\n  const [pass, setPass] = useState();\n  const [coming, setComing] = useState(false);\n  const [invalidPass, setInvalidPass] = useState(false);\n  return coming ? /*#__PURE__*/_jsxDEV(Coming, {\n    token: token,\n    floors: floors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      heading: \"project.text.password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"project.placeholder.password\",\n        children: placeholder => /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: placeholder,\n          pattern: \"\\\\d{4}\",\n          onChange: e => setPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: () => {\n            backend.sendPassword(pass);\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), invalidPass && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      heading: \"project.alerts.password.incorrect.header\",\n      text: \"project.alerts.password.incorrect.body\",\n      onClose: () => setInvalidPass(false),\n      style: {\n        marginTop: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 63\n  }, this);\n};\n\n_s(Password, \"LvrGC4TAUYjTU63nubYkhdl6ccQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/modules/app/components/Password.js"],"names":["Button","FormControl","InputGroup","React","useEffect","useState","useParams","Coming","backend","ErrorAlert","FormattedMessage","Alert","floors","Password","floor","token","setToken","pass","setPass","coming","setComing","invalidPass","setInvalidPass","placeholder","e","target","value","sendPassword","marginTop"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,QAAgD,iBAAhD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAUR,SAAS,EAAzB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AAGA,SAAOc,MAAM,gBAAG,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,KAAf;AAAsB,IAAA,MAAM,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA6C;AAAA,4BAEtD,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFsD,eAItD,QAAC,UAAD;AAAA,8BACA,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,8BAArB;AAAA,kBAAqDW,WAAW,iBACxD,QAAC,WAAD;AACA,UAAA,WAAW,EAAEA,WADb;AAEA,UAAA,OAAO,EAAC,QAFR;AAGA,UAAA,QAAQ,EAAEC,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAHtB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cADA,eASI,QAAC,UAAD,CAAY,MAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAE,MAAM;AACzDlB,YAAAA,OAAO,CAACmB,YAAR,CAAqBV,IAArB;AACH,WAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJsD,EAoBrDI,WAAW,iBAAI,QAAC,UAAD;AACZ,MAAA,OAAO,EAAC,0CADI;AAEZ,MAAA,IAAI,EAAC,wCAFO;AAGZ,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD,CAHjB;AAIZ,MAAA,KAAK,EAAE;AAACM,QAAAA,SAAS,EAAC;AAAX;AAJK;AAAA;AAAA;AAAA;AAAA,YApBsC;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1D;AA4BH,CApCD;;GAAMf,Q;UACcP,S;;;KADdO,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Coming from './Coming';\r\nimport backend from '../../../backend';\r\nimport ErrorAlert from '../../utils/components/ErrorAlert';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Alert from '../../utils/components/Alert';\r\n\r\nconst floors = [0,1,2];\r\n\r\nconst Password = () => {\r\n    const {floor} = useParams();\r\n    const [token, setToken] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [coming, setComing] = useState(false);\r\n    const [invalidPass, setInvalidPass] = useState(false);\r\n\r\n\r\n    return coming ? <Coming token={token} floors={floors}/> : <form>\r\n\r\n        <Alert heading=\"project.text.password\"/>\r\n\r\n        <InputGroup>\r\n        <FormattedMessage id=\"project.placeholder.password\">{placeholder =>\r\n                <FormControl\r\n                placeholder={placeholder}\r\n                pattern=\"\\d{4}\"\r\n                onChange={e => setPass(e.target.value)}\r\n            />\r\n        }</FormattedMessage>\r\n\r\n            <InputGroup.Append>\r\n                <Button variant=\"outline-primary\" onClick={() => {\r\n        backend.sendPassword(pass);\r\n    }}>submit</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n        {invalidPass && <ErrorAlert\r\n            heading=\"project.alerts.password.incorrect.header\" \r\n            text=\"project.alerts.password.incorrect.body\" \r\n            onClose={() => setInvalidPass(false)}\r\n            style={{marginTop:\"20px\"}}/>\r\n        }\r\n\r\n    </form>\r\n};\r\n\r\nexport default Password;"]},"metadata":{},"sourceType":"module"}