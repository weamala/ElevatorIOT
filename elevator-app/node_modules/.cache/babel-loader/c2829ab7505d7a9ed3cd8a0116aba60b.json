{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruzaf\\\\Desktop\\\\ws\\\\elevator-app\\\\src\\\\modules\\\\app\\\\components\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport backend from '../../../backend/fetch';\nimport Coming from './Coming';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Password = () => {\n  _s();\n\n  const {\n    id,\n    floor\n  } = useParams();\n  const [floors, setFloors] = useState();\n  const [token, setToken] = useState();\n  const [pass, setPass] = useState();\n  const [coming, setComing] = useState(false);\n  useEffect(() => {\n    backend('GET', `elevator/${id}`).then(toJSON).then(sort((a, b) => b - a)).then(setFloors).catch(console.err);\n  }, []);\n  return coming ? /*#__PURE__*/_jsxDEV(Coming, {\n    token: token,\n    floors: floors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"primary\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"password\",\n        pattern: \"\\\\d{4}\",\n        onChange: e => setPass(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: _e => {\n            backend('POST', `elevator/${id}/access`, {\n              otp: pass\n            }).then(toJSON).then(({\n              token\n            }) => {\n              setToken(token);\n              return backend('POST', 'elevator/move', {\n                floor\n              }, {\n                Authorization: `Bearer ${token}`\n              });\n            }).then(r => {\n              console.log(r);\n              setComing(true);\n            }).catch(console.err);\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 63\n  }, this);\n};\n\n_s(Password, \"7w6Og/Zf9LmSEO4hP1MaXKpujGg=\", false, function () {\n  return [useParams];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/modules/app/components/Password.js"],"names":["Alert","Button","FormControl","InputGroup","React","useEffect","useState","useParams","backend","Coming","Password","id","floor","floors","setFloors","token","setToken","pass","setPass","coming","setComing","then","toJSON","sort","a","b","catch","console","err","e","target","value","_e","otp","Authorization","r","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,iBAAvD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,OAAO,CAAC,KAAD,EAAS,YAAWG,EAAG,EAAvB,CAAP,CACKU,IADL,CACUC,MADV,EAEKD,IAFL,CAEUE,IAAI,CAAC,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAZ,CAFd,EAGKH,IAHL,CAGUP,SAHV,EAIKY,KAJL,CAIWC,OAAO,CAACC,GAJnB;AAKH,GAPQ,EAON,EAPM,CAAT;AASA,SAAOT,MAAM,gBAAG,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,KAAf;AAAsB,IAAA,MAAM,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA6C;AAAA,4BAEtD,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFsD,eAGtD,QAAC,UAAD;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,OAAO,EAAC,QAFZ;AAGI,QAAA,QAAQ,EAAEgB,CAAC,IAAIX,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,UAAD,CAAY,MAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAEC,EAAE,IAAI;AAC7CxB,YAAAA,OAAO,CAAC,MAAD,EAAU,YAAWG,EAAG,SAAxB,EAAkC;AAACsB,cAAAA,GAAG,EAAChB;AAAL,aAAlC,CAAP,CACKI,IADL,CACUC,MADV,EAEKD,IAFL,CAEU,CAAC;AAACN,cAAAA;AAAD,aAAD,KAAa;AACfC,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,qBAAOP,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B;AAACI,gBAAAA;AAAD,eAA1B,EAAmC;AAC7CsB,gBAAAA,aAAa,EAAG,UAASnB,KAAM;AADc,eAAnC,CAAd;AAGH,aAPL,EAQKM,IARL,CAQUc,CAAC,IAAG;AACNR,cAAAA,OAAO,CAACS,GAAR,CAAYD,CAAZ;AACAf,cAAAA,SAAS,CAAC,IAAD,CAAT;AACH,aAXL,EAYKM,KAZL,CAYWC,OAAO,CAACC,GAZnB;AAaH,WAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHsD;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1D;AA6BH,CA7CD;;GAAMlB,Q;UACkBH,S;;;KADlBG,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport backend from '../../../backend/fetch';\r\nimport Coming from './Coming';\r\n\r\n\r\nconst Password = () => {\r\n    const {id, floor} = useParams();\r\n    const [floors, setFloors] = useState();\r\n    const [token, setToken] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [coming, setComing] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        \r\n        backend('GET', `elevator/${id}`)\r\n            .then(toJSON)\r\n            .then(sort((a,b) => b-a))\r\n            .then(setFloors)\r\n            .catch(console.err);\r\n    }, []);\r\n\r\n    return coming ? <Coming token={token} floors={floors}/> : <form>\r\n\r\n        <Alert variant=\"primary\">Password:</Alert>\r\n        <InputGroup>\r\n            <FormControl\r\n                placeholder=\"password\"\r\n                pattern=\"\\d{4}\"\r\n                onChange={e => setPass(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n                <Button variant=\"outline-primary\" onClick={_e => {\r\n                    backend('POST', `elevator/${id}/access`, {otp:pass})\r\n                        .then(toJSON)\r\n                        .then(({token}) => {\r\n                            setToken(token);\r\n                            return backend('POST', 'elevator/move', {floor}, {\r\n                                Authorization: `Bearer ${token}`\r\n                            })\r\n                        })\r\n                        .then(r =>{\r\n                            console.log(r);\r\n                            setComing(true)\r\n                        })\r\n                        .catch(console.err);\r\n                }}>submit</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n    </form>\r\n};\r\n\r\nexport default Password;"]},"metadata":{},"sourceType":"module"}