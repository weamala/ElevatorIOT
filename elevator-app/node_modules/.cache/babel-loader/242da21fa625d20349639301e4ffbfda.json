{"ast":null,"code":"import { appFetch, config, setServiceToken } from './appFetch';\nexport const getFloors = (id, onSucess = console.log, onError) => {\n  appFetch(`/elevator/${id}`, config('GET'), s => {\n    onSucess(s.floors.sort((a, b) => b - a));\n  }, onError);\n};\nexport const sendPassword = (otp, floor, onSucess, onError) => {\n  appFetch('/password', config('POST', {\n    otp,\n    floor\n  }), onSucess, onError);\n};\nexport const changeFloor = () => {};\nexport const getToken = (id, otp, onSucess = console.log, onError) => {\n  appFetch(`/elevator/${id}/access`, config('POST', {\n    otp\n  }), ({\n    token\n  }) => {\n    setServiceToken(token);\n    onSucess(token);\n  }, onError);\n};\nexport const move = (floor, onSucess = console.log, onErrors) => {\n  appFetch('/elevator/move', config('POST', {\n    floor\n  }), onSucess, onErrors);\n};","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/backend/service.js"],"names":["appFetch","config","setServiceToken","getFloors","id","onSucess","console","log","onError","s","floors","sort","a","b","sendPassword","otp","floor","changeFloor","getToken","token","move","onErrors"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,eAA3B,QAAkD,YAAlD;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAQ,GAACC,OAAO,CAACC,GAAtB,EAA2BC,OAA3B,KAAuC;AAC5DR,EAAAA,QAAQ,CAAE,aAAYI,EAAG,EAAjB,EAAoBH,MAAM,CAAC,KAAD,CAA1B,EAAmCQ,CAAC,IAAI;AAC5CJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,IAAT,CAAc,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAzB,CAAD,CAAR;AACH,GAFO,EAELJ,OAFK,CAAR;AAGH,CAJM;AAMP,OAAO,MAAMM,YAAY,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaX,QAAb,EAAuBG,OAAvB,KAAmC;AAC3DR,EAAAA,QAAQ,CAAC,WAAD,EAAcC,MAAM,CAAC,MAAD,EAAS;AACjCc,IAAAA,GADiC;AAC5BC,IAAAA;AAD4B,GAAT,CAApB,EAEJX,QAFI,EAEMG,OAFN,CAAR;AAGH,CAJM;AAMP,OAAO,MAAMS,WAAW,GAAG,MAAM,CAEhC,CAFM;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAACd,EAAD,EAAKW,GAAL,EAAUV,QAAQ,GAACC,OAAO,CAACC,GAA3B,EAAgCC,OAAhC,KAA4C;AAChER,EAAAA,QAAQ,CAAE,aAAYI,EAAG,SAAjB,EAA2BH,MAAM,CAAC,MAAD,EAAS;AAACc,IAAAA;AAAD,GAAT,CAAjC,EAAkD,CAAC;AAACI,IAAAA;AAAD,GAAD,KAAa;AACnEjB,IAAAA,eAAe,CAACiB,KAAD,CAAf;AACAd,IAAAA,QAAQ,CAACc,KAAD,CAAR;AACH,GAHO,EAGLX,OAHK,CAAR;AAIH,CALM;AAMP,OAAO,MAAMY,IAAI,GAAG,CAACJ,KAAD,EAAQX,QAAQ,GAACC,OAAO,CAACC,GAAzB,EAA8Bc,QAA9B,KAA2C;AAC3DrB,EAAAA,QAAQ,CAAC,gBAAD,EACJC,MAAM,CAAC,MAAD,EAAS;AAACe,IAAAA;AAAD,GAAT,CADF,EAEJX,QAFI,EAGJgB,QAHI,CAAR;AAIH,CALM","sourcesContent":["import { appFetch, config, setServiceToken } from './appFetch';\r\n\r\nexport const getFloors = (id, onSucess=console.log, onError) => {\r\n    appFetch(`/elevator/${id}`, config('GET'), s => {\r\n        onSucess(s.floors.sort((a,b) => b-a));\r\n    }, onError);\r\n}\r\n\r\nexport const sendPassword = (otp, floor, onSucess, onError) => {\r\n    appFetch('/password', config('POST', {\r\n        otp, floor\r\n    }), onSucess, onError);\r\n}\r\n\r\nexport const changeFloor = () => {\r\n\r\n}\r\nexport const getToken = (id, otp, onSucess=console.log, onError) => {\r\n    appFetch(`/elevator/${id}/access`, config('POST', {otp}), ({token}) => {\r\n        setServiceToken(token);\r\n        onSucess(token);\r\n    }, onError);\r\n}\r\nexport const move = (floor, onSucess=console.log, onErrors) => {\r\n    appFetch('/elevator/move',\r\n        config('POST', {floor}),\r\n        onSucess,\r\n        onErrors)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}