{"ast":null,"code":"import { appFetch, setReauthenticationCallback, setServiceToken } from './appFetch';\n\nconst sort = criteria => ({\n  floors\n}) => floors.sort(criteria);\n\nexport const getFloors = (id, onSucess = console.log, onError = console.err) => {\n  appFetch(`elevator/${id}`, config('GET'), s => {\n    onSucess(s.floors.sort((a, b) => b - a));\n  }, onError);\n};\nexport const getToken = (id, otp, onSucess = console.log, onError = console.err) => {\n  appFetch(`elevator/${id}/access`, config('POST', {\n    otp\n  }), ({\n    token\n  }) => {\n    setServiceToken(token);\n    onSucess(token);\n  }, onError);\n};\nexport const move = (token, floor, onSucess = console.log, onError = console.err) => {\n  appFetch('elevator/move', config('POST', {\n    floor\n  }), onSucess, onError);\n};","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/backend/service.js"],"names":["appFetch","setReauthenticationCallback","setServiceToken","sort","criteria","floors","getFloors","id","onSucess","console","log","onError","err","config","s","a","b","getToken","otp","token","move","floor"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,2BAAnB,EAAgDC,eAAhD,QAAuE,YAAvE;;AAEA,MAAMC,IAAI,GAAGC,QAAQ,IAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAcA,MAAM,CAACF,IAAP,CAAYC,QAAZ,CAAvC;;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAQ,GAACC,OAAO,CAACC,GAAtB,EAA2BC,OAAO,GAACF,OAAO,CAACG,GAA3C,KAAmD;AACxEZ,EAAAA,QAAQ,CAAE,YAAWO,EAAG,EAAhB,EAAmBM,MAAM,CAAC,KAAD,CAAzB,EAAkCC,CAAC,IAAI;AAC3CN,IAAAA,QAAQ,CAACM,CAAC,CAACT,MAAF,CAASF,IAAT,CAAc,CAACY,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAzB,CAAD,CAAR;AACH,GAFO,EAELJ,OAFK,CAAR;AAGH,CAJM;AAKP,OAAO,MAAMM,QAAQ,GAAG,CAACV,EAAD,EAAKW,GAAL,EAAUV,QAAQ,GAACC,OAAO,CAACC,GAA3B,EAAgCC,OAAO,GAACF,OAAO,CAACG,GAAhD,KAAwD;AAC5EZ,EAAAA,QAAQ,CAAE,YAAWO,EAAG,SAAhB,EAA0BM,MAAM,CAAC,MAAD,EAAS;AAACK,IAAAA;AAAD,GAAT,CAAhC,EAAiD,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAa;AAClEjB,IAAAA,eAAe,CAACiB,KAAD,CAAf;AACAX,IAAAA,QAAQ,CAACW,KAAD,CAAR;AACH,GAHO,EAGLR,OAHK,CAAR;AAIH,CALM;AAMP,OAAO,MAAMS,IAAI,GAAG,CAACD,KAAD,EAAQE,KAAR,EAAeb,QAAQ,GAACC,OAAO,CAACC,GAAhC,EAAqCC,OAAO,GAACF,OAAO,CAACG,GAArD,KAA6D;AAC7EZ,EAAAA,QAAQ,CAAC,eAAD,EACJa,MAAM,CAAC,MAAD,EAAS;AAACQ,IAAAA;AAAD,GAAT,CADF,EAEJb,QAFI,EAGJG,OAHI,CAAR;AAIH,CALM","sourcesContent":["import { appFetch, setReauthenticationCallback, setServiceToken } from './appFetch';\r\n\r\nconst sort = criteria => ({floors}) => floors.sort(criteria);\r\n\r\nexport const getFloors = (id, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`elevator/${id}`, config('GET'), s => {\r\n        onSucess(s.floors.sort((a,b) => b-a));\r\n    }, onError);\r\n}\r\nexport const getToken = (id, otp, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`elevator/${id}/access`, config('POST', {otp}), ({token}) => {\r\n        setServiceToken(token);\r\n        onSucess(token);\r\n    }, onError);\r\n}\r\nexport const move = (token, floor, onSucess=console.log, onError=console.err) => {\r\n    appFetch('elevator/move',\r\n        config('POST', {floor}),\r\n        onSucess,\r\n        onError)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}