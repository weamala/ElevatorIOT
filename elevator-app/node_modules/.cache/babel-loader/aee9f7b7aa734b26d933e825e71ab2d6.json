{"ast":null,"code":"import { appFetch, config, setServiceToken } from './appFetch';\nexport const getFloors = (id, onSucess = console.log, onError = console.err) => {\n  appFetch(`elevator/${id}`, config('GET'), s => {\n    onSucess(s.floors.sort((a, b) => b - a));\n  }, onError);\n};\nexport const getToken = (id, otp, onSucess = console.log, onError = console.err) => {\n  appFetch(`/elevator/${id}/access`, config('POST', {\n    otp\n  }), ({\n    token\n  }) => {\n    setServiceToken(token);\n    onSucess(token);\n  }, onError);\n};\nexport const move = (token, floor, onSucess = console.log, onError = console.err) => {\n  appFetch('elevator/move', config('POST', {\n    floor\n  }), onSucess, onError);\n};","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/backend/service.js"],"names":["appFetch","config","setServiceToken","getFloors","id","onSucess","console","log","onError","err","s","floors","sort","a","b","getToken","otp","token","move","floor"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,eAA3B,QAAkD,YAAlD;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,QAAQ,GAACC,OAAO,CAACC,GAAtB,EAA2BC,OAAO,GAACF,OAAO,CAACG,GAA3C,KAAmD;AACxET,EAAAA,QAAQ,CAAE,YAAWI,EAAG,EAAhB,EAAmBH,MAAM,CAAC,KAAD,CAAzB,EAAkCS,CAAC,IAAI;AAC3CL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,IAAT,CAAc,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAACD,CAAzB,CAAD,CAAR;AACH,GAFO,EAELL,OAFK,CAAR;AAGH,CAJM;AAKP,OAAO,MAAMO,QAAQ,GAAG,CAACX,EAAD,EAAKY,GAAL,EAAUX,QAAQ,GAACC,OAAO,CAACC,GAA3B,EAAgCC,OAAO,GAACF,OAAO,CAACG,GAAhD,KAAwD;AAC5ET,EAAAA,QAAQ,CAAE,aAAYI,EAAG,SAAjB,EAA2BH,MAAM,CAAC,MAAD,EAAS;AAACe,IAAAA;AAAD,GAAT,CAAjC,EAAkD,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAa;AACnEf,IAAAA,eAAe,CAACe,KAAD,CAAf;AACAZ,IAAAA,QAAQ,CAACY,KAAD,CAAR;AACH,GAHO,EAGLT,OAHK,CAAR;AAIH,CALM;AAMP,OAAO,MAAMU,IAAI,GAAG,CAACD,KAAD,EAAQE,KAAR,EAAed,QAAQ,GAACC,OAAO,CAACC,GAAhC,EAAqCC,OAAO,GAACF,OAAO,CAACG,GAArD,KAA6D;AAC7ET,EAAAA,QAAQ,CAAC,eAAD,EACJC,MAAM,CAAC,MAAD,EAAS;AAACkB,IAAAA;AAAD,GAAT,CADF,EAEJd,QAFI,EAGJG,OAHI,CAAR;AAIH,CALM","sourcesContent":["import { appFetch, config, setServiceToken } from './appFetch';\r\n\r\nexport const getFloors = (id, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`elevator/${id}`, config('GET'), s => {\r\n        onSucess(s.floors.sort((a,b) => b-a));\r\n    }, onError);\r\n}\r\nexport const getToken = (id, otp, onSucess=console.log, onError=console.err) => {\r\n    appFetch(`/elevator/${id}/access`, config('POST', {otp}), ({token}) => {\r\n        setServiceToken(token);\r\n        onSucess(token);\r\n    }, onError);\r\n}\r\nexport const move = (token, floor, onSucess=console.log, onError=console.err) => {\r\n    appFetch('elevator/move',\r\n        config('POST', {floor}),\r\n        onSucess,\r\n        onError)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}