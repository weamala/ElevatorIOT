{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruzaf\\\\Desktop\\\\ws\\\\elevator-app\\\\src\\\\modules\\\\app\\\\components\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport backend from '../../../backend/fetch';\nimport Coming from './Coming';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Password = () => {\n  _s();\n\n  const {\n    id,\n    floor\n  } = useParams();\n  const [token, setToken] = useState();\n  const [pass, setPass] = useState();\n  const [coming, setComing] = useState(false);\n  use;\n  return coming ? /*#__PURE__*/_jsxDEV(Coming, {\n    token: token,\n    id: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"primary\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"password\",\n        pattern: \"\\\\d{4}\",\n        onChange: e => setPass(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: _e => {\n            backend('POST', `elevator/${id}/access`, {\n              otp: pass\n            }).then(({\n              token\n            }) => {\n              setToken(token);\n              return backend('POST', 'elevator/move', {\n                floor\n              }, {\n                Authorization: `Bearer ${token}`\n              });\n            }).then(r => setComing(true)).catch(console.err);\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 55\n  }, this);\n};\n\n_s(Password, \"d/LT1o916EuzQ495wxXrIOuHs2U=\", false, function () {\n  return [useParams];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/modules/app/components/Password.js"],"names":["Alert","Button","FormControl","InputGroup","React","useState","useParams","backend","Coming","Password","id","floor","token","setToken","pass","setPass","coming","setComing","use","e","target","value","_e","otp","then","Authorization","r","catch","console","err"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,iBAAvD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAa,EAAAA,GAAG;AAEH,SAAOF,MAAM,gBAAG,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,KAAf;AAAsB,IAAA,EAAE,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAqC;AAAA,4BAE9C,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF8C,eAG9C,QAAC,UAAD;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,OAAO,EAAC,QAFZ;AAGI,QAAA,QAAQ,EAAES,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,UAAD,CAAY,MAAZ;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAEC,EAAE,IAAI;AAC7Cf,YAAAA,OAAO,CAAC,MAAD,EAAU,YAAWG,EAAG,SAAxB,EAAkC;AAACa,cAAAA,GAAG,EAACT;AAAL,aAAlC,CAAP,CACKU,IADL,CACU,CAAC;AAACZ,cAAAA;AAAD,aAAD,KAAa;AACfC,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,qBAAOL,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B;AAACI,gBAAAA;AAAD,eAA1B,EAAmC;AAC7Cc,gBAAAA,aAAa,EAAG,UAASb,KAAM;AADc,eAAnC,CAAd;AAGH,aANL,EAOKY,IAPL,CAOUE,CAAC,IAAGT,SAAS,CAAC,IAAD,CAPvB,EAQKU,KARL,CAQWC,OAAO,CAACC,GARnB;AASH,WAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAH8C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlD;AAyBH,CAjCD;;GAAMpB,Q;UACkBH,S;;;KADlBG,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { Alert, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport backend from '../../../backend/fetch';\r\nimport Coming from './Coming';\r\n\r\nconst Password = () => {\r\n    const {id, floor} = useParams();\r\n    const [token, setToken] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [coming, setComing] = useState(false);\r\n    \r\n    use\r\n\r\n    return coming ? <Coming token={token} id={id}/> : <form>\r\n\r\n        <Alert variant=\"primary\">Password:</Alert>\r\n        <InputGroup>\r\n            <FormControl\r\n                placeholder=\"password\"\r\n                pattern=\"\\d{4}\"\r\n                onChange={e => setPass(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n                <Button variant=\"outline-primary\" onClick={_e => {\r\n                    backend('POST', `elevator/${id}/access`, {otp:pass})\r\n                        .then(({token}) => {\r\n                            setToken(token);\r\n                            return backend('POST', 'elevator/move', {floor}, {\r\n                                Authorization: `Bearer ${token}`\r\n                            })\r\n                        })\r\n                        .then(r =>setComing(true))\r\n                        .catch(console.err);\r\n                }}>submit</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n    </form>\r\n};\r\n\r\nexport default Password;"]},"metadata":{},"sourceType":"module"}