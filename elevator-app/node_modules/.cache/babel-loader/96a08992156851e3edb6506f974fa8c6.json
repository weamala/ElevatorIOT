{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruzaf\\\\Desktop\\\\ws\\\\elevator-app\\\\src\\\\modules\\\\app\\\\components\\\\Floors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Button, Row, Alert } from 'react-bootstrap';\nimport backend from '../../../backend/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Box = styled(Button)`${({\n  square\n}) => `\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    ${square ? `    \n        position: relative;\n\n        &:before {\n            content:\"\";\n            float: left;\n            padding-top:100%;\n        }\n    ` : \"\"}\n`}`;\n_c = Box;\nconst Content = styled.div`\n    font-size:50pt;\n`;\n_c2 = Content;\n\nconst Floor = ({\n  floor,\n  square,\n  className,\n  token,\n  onSucess = console.log,\n  clicked = c => {}\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  square: square,\n  className: `${className}`,\n  onClick: () => {\n    backend.move(token, floor, onSucess);\n    clicked(true);\n  },\n  children: /*#__PURE__*/_jsxDEV(Content, {\n    children: floor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 91\n}, this);\n\n_c3 = Floor;\nconst Raul = styled(Row)`\n    justify-content:space-evenly;\n`;\n_c4 = Raul;\n\nconst Floors = ({\n  floors\n}) => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n  return clicked ? /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    className: \"p-3\",\n    children: floors.map((floor, i, a) => i % 2 === 0 && (a[i + 1] !== undefined ? /*#__PURE__*/_jsxDEV(Raul, {\n      className: \"mb-3 d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(Floor, {\n        className: \"col-5\",\n        floor: floor,\n        square: true,\n        clicked: setClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Floor, {\n        token: token,\n        className: \"col-5\",\n        floor: a[i + 1],\n        square: true,\n        clicked: setClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Raul, {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(Floor, {\n        token: token,\n        className: \"col-10\",\n        floor: floor,\n        clicked: setClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 40\n  }, this);\n};\n\n_s(Floors, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n\n_c5 = Floors;\nexport default Floors;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Floor\");\n$RefreshReg$(_c4, \"Raul\");\n$RefreshReg$(_c5, \"Floors\");","map":{"version":3,"sources":["C:/Users/ruzaf/Desktop/ws/elevator-app/src/modules/app/components/Floors.js"],"names":["React","useState","styled","Container","Button","Row","Alert","backend","Box","square","Content","div","Floor","floor","className","token","onSucess","console","log","clicked","c","move","Raul","Floors","floors","setClicked","map","i","a","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Container, Button, Row, Alert} from 'react-bootstrap';\r\nimport backend from '../../../backend/';\r\n\r\nconst Box = styled(Button)`${({square}) => `\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    ${square ? `    \r\n        position: relative;\r\n\r\n        &:before {\r\n            content:\"\";\r\n            float: left;\r\n            padding-top:100%;\r\n        }\r\n    ` : \"\" }\r\n`}`\r\n\r\nconst Content = styled.div`\r\n    font-size:50pt;\r\n`\r\n\r\nconst Floor = ({floor, square, className, token, onSucess=console.log, clicked=c=>{}}) => <Box square={square} className={`${className}`} onClick={() => {\r\n        backend.move(token, floor, onSucess)\r\n        clicked(true);\r\n    }}>\r\n        <Content>{floor}</Content>\r\n</Box>\r\n\r\nconst Raul = styled(Row)`\r\n    justify-content:space-evenly;\r\n`\r\nconst Floors = ({floors}) =>{\r\n    const [clicked, setClicked] = useState(false);\r\n    return clicked ? <Alert></Alert> : <Container className=\"p-3\">{\r\n    floors.map((floor,i,a) => i % 2 === 0 && (\r\n        a[i+1] !== undefined ? \r\n            <Raul key={i} className=\"mb-3 d-flex\">\r\n                <Floor className=\"col-5\" floor={floor}  square clicked={setClicked}/>\r\n                <Floor token={token} className=\"col-5\" floor={a[i+1]} square clicked={setClicked}/>\r\n            </Raul> \r\n            : \r\n            <Raul key={i} className=\"d-flex\" >\r\n                <Floor token={token} className=\"col-10\" floor={floor} clicked={setClicked}/>\r\n            </Raul>\r\n        )\r\n    )\r\n}</Container>}\r\n\r\nexport default Floors;"]},"metadata":{},"sourceType":"module"}